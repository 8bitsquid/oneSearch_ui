@ngdoc overview
@name Adding Engines

@description

# Adding Engines to oneSearch

<div class="alert alert-primary">Engines are configured and registered via the `oneSearchProvider`, {@link api/oneSearch.oneSearchProvider see here for details}</div>

## 1. Create a directory with the engines name under `src/app/common/engines/ENGINE_NAME`.

     - This will contain the engine's config module, template, and LESS/CSS files

## 2. In the engines folder create the `engine config` module file: `myEngine.js`:

     -**Note:** be sure to add the `@ngdoc` comments, filling in the `properties` table, so the engine info will appear in these docs! You can use the example below as a template.
<pre>
    &#47;**
     &#64;ngdoc object
     &#64;name engines.type:myEngine
     
     &#64;description
     Engine config properties
     
     | property | value |
     |----------|-------|
     | id       | {number|string}      |
     | title    | `My Engine` |
     | priority | N/A *(defaults to 10)*     |
     | resultsPath | `JSON.Path.To.Results`     |
     | totalsPath | `JSON.Path.To.Results.Totals`     |
     | mediaTypes | <ul><li>**path:** `JSON.Path.To.Type.Value`</li><li>**types:** <ul><li>**books:** `['books', 'ebook']`</li></ul></li></ul> |
     | filterQuery | FILTER_QUERY |
     | templateUrl | `common/engines/my-engine/my-engine.html` |
     | controller |  {&#64;link engines.type:myEngine}  |
     
     &#64;requires oneSearch.oneSearchProvider
     *&#47;

    angular.module('engines.myEngine', [])
    
         .config(['oneSearchProvider', function(oneSearchProvider){
                 oneSearchProvider.engine('myEngine', {
                     id: {number|string},
                     title: {string=}
                     priority: {number},
                     resultsPath: 'JSON.Path.To.Results',
                     totalsPath: 'JSON.Path.To.Results.Totals',
                     mediaTypes: {
                         path: 'JSON.Path.To.Type.Value',
                         types: {
                             books: ['books', 'ebook']
                         }
                     },
                     templateUrl: 'common/engines/my-engine/my-engine.tpl.html',
                     controller: 'MyEngineCtrl'
                 });
             }])
             
         .controller(['$scope', function($scope){
            for(var item in $scope.items){
                ...
            }    
         ]);
</pre>

3. Create a template for engine items - this template is applied to each item in the search results individually
     -*Note:** template files should *always* end in `.tpl.html` (i.e., ENGINE_NAME.tpl.html)

4. *(optional)* Create LESS file to create custom styles for the engine's template

5. Add the `ENGINE_NAME` config module to the `common.engines` module's dependencies
<pre>
    angular.module('common.engines', [
         'engines.scout',
         'engines.catalog',
         ...
         'engines.ENGINE_NAME`
    ])
</pre>